GPIO load

: emit-pulse ( trigger-pin -- )
    dup GPIO_OUT gpio-mode
    dup GPIO_LOW gpio-write
    2 us
    dup GPIO_HIGH gpio-write
    10 us
    GPIO_LOW gpio-write ;

: listen-echo ( echo-pin timeout-us -- ms )
    over GPIO_IN gpio-mode    
    GPIO_HIGH rot pulse-len ;

\ Measures the pulse generated by ultrasonic ranging module (tested with: HC-SR04 sensors)
\ Works the following way:
\ (1) Using IO trigger for at least 10us high level signal,
\ (2) The Module automatically sends eight 40 kHz and detect whether there is a pulse signal back.
\ (3) IF the signal back, time of high output IO duration is the time from sending ultrasonic to returning.
\ Distance = (high level time×velocity of sound (340M/S) / 2, 
\ Usage example: PIN_ECHO 100 cm>timeout PIN_TRIGGER ping pulse>cm
: ping ( echo-pin timeout-us trigger-pin -- pulse-duration-us )
    os-enter-critical
    { emit-pulse listen-echo } catch
    os-exit-critical
    throw ;

: cm>timeout ( cm -- us ) 60 * ;
: inch>timeout ( inch -- us ) 150 * ;
: pulse>cm ( us -- cm ) 58 / ;
: pulse>inch ( us -- inch ) 148 / ;

/end
